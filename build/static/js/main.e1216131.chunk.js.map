{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","components/BlogCreateForm.js","components/Togglable.js","App.js","index.js"],"names":["Blog","blog","updateBlog","user","removeBlog","blogStyle","paddingTop","paddingLeft","paddingBottom","border","borderWidth","marginBottom","marginTop","useState","visible","setVisible","parseInt","likes","setLikes","showWhenVisible","display","username","toggleVisibility","style","className","title","author","onClick","url","id","event","preventDefault","token","baseUrl","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","update","put","remove","delete","login","credentials","Notification","message","type","BlogCreateForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","onSubmit","value","onChange","target","Togglable","forwardRef","props","ref","hideWhenVisible","useImperativeHandle","buttonLabel","children","displayName","App","blogs","setBlogs","setUsername","password","setPassword","setUser","errorMessage","setErrorMessage","blogFormRef","useRef","useEffect","blogService","sort","blg","blg2","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","console","log","loginService","setItem","stringify","setTimeout","blogObject","tok","confirm","filter","per","name","clear","map","current","returnedBlog","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1216131.chunk.js","sourcesContent":["import { useState } from 'react'\nimport '../index.css'\n\nconst Blog = ({ blog, updateBlog, user, removeBlog }) => {\n  const blogStyle = {\n    paddingTop: 2,\n    paddingLeft: 2,\n    paddingBottom: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 2,\n    marginTop: 2\n  }\n  const [visible, setVisible] = useState(false)\n  const [likes, setLikes] = useState(parseInt(blog.likes))\n  const showWhenVisible = { display: user.username===blog.user.username ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const deleteBlog = () => {\n    removeBlog(blog.id,user.token, blog)\n  }\n\n  const addLike = (event) => {\n    event.preventDefault()\n    updateBlog(blog.id,{\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: likes + 1,\n      user: blog.user.id\n    })\n\n    setLikes(likes + 1)\n}\n\n  if(visible){\n    return (\n      <div style={blogStyle} className='blog'>\n        {blog.title} {blog.author} <button onClick={toggleVisibility}>hide</button>\n        <p>{blog.url}</p>\n        <p>{likes}<button id=\"like-button\" onClick={addLike}>Like</button></p>\n        <p>{blog.user.username}</p>\n        <div style={showWhenVisible}>\n          <button id=\"remove-button\" onClick={deleteBlog}>Remove</button>\n        </div>\n      </div>\n    )\n  }else{\n    return (\n      <div style={blogStyle} className='blog'>\n        {blog.title} {blog.author} <button onClick={toggleVisibility}>view</button>\n      </div>\n    )\n  }\n}\n\nexport default Blog","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id,token) => {\n  const request = axios.delete(`${baseUrl}/${id}`,{\n    headers: {\n      Authorization: token\n    } })\n  return request.then(response => response.data)\n}\n\nexport default { getAll, setToken, create, update, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport '../index.css'\n\nconst Notification = ({ message,type }) => {\n  if (message === null) {\n    return null\n  }\n\n  if(type===1){\n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )\n  }else{\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n}\n\nexport default Notification","import { useState } from 'react'\n\nconst BlogCreateForm = ({ createBlog }) => {\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n      event.preventDefault()\n      createBlog({\n        title: newTitle,\n        author: newAuthor,\n        url: newUrl\n      })\n      setNewTitle('')\n      setNewAuthor('')\n      setNewUrl('')\n  }\n\n  return (\n    <div className='formDiv'>\n      <div>\n        <h2>Create new</h2>\n      </div>\n      <form onSubmit={addBlog}>\n        <p>Title:<input id=\"title-input\" value={newTitle} onChange={handleTitleChange}/></p>\n        <p>Author:<input id=\"author-input\" value={newAuthor} onChange={handleAuthorChange}/></p>\n        <p>Url:<input id=\"url-input\" value={newUrl} onChange={handleUrlChange}/></p>\n        <button\n          id=\"create-button\"\n          type=\"submit\">Create\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default BlogCreateForm","import { useState, useImperativeHandle, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n      return {\n          toggleVisibility\n      }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport BlogCreateForm from './components/BlogCreateForm'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs.sort(function (blg, blg2) {\n        return parseInt(blg2.likes) - parseInt(blg.likes)\n      }))\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      //console.log(user)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log(\"loggin in\")\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n        .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setErrorMessage(`A new blog ${blogObject.title} by ${blogObject.author} added`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const updateBlog = (id,blogObject) => {\n    blogService\n      .update(id,blogObject)\n  }\n\n  const removeBlog = (id, tok, blog) => {\n    if(window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)){\n      blogService\n      .remove(id, `bearer ${tok}`)\n        .then(() => {\n        setBlogs(blogs.filter(per => per.id !== id))\n        setErrorMessage(`Blog Deleted`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.clear()\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <Notification message={errorMessage} type={0} />\n        <h2>Log in to application</h2>\n        <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h3>BLOGS</h3>\n      <Notification message={errorMessage} type={1} />\n      <div>\n        <p>{user.name} logged in <button onClick={() => handleLogout()}>logout</button></p>\n      </div>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} user={user} removeBlog={removeBlog}/>\n      )}\n      <Togglable buttonLabel=\"create new blog\" ref={blogFormRef}>\n        <BlogCreateForm createBlog={addBlog}/>\n      </Togglable>\n    </div>\n\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}