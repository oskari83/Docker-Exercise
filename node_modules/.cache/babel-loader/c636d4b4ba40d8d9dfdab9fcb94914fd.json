{"ast":null,"code":"var _jsxFileName = \"/Users/oskaripeltonen/Desktop/Fullstack Open/osa5/bloglist-frontend-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport BlogCreateForm from './components/BlogCreateForm';\nimport Togglable from './components/Togglable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const blogFormRef = useRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort(function (blg, blg2) {\n      return parseInt(blg2.likes) - parseInt(blg.likes);\n    })));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON); //console.log(user)\n\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log(\"loggin in\");\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong username or password');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const addBlog = blogObject => {\n    blogFormRef.current.toggleVisibility();\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setErrorMessage(`A new blog ${blogObject.title} by ${blogObject.author} added`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n\n  const updateBlog = (id, blogObject) => {\n    blogService.update(id, blogObject);\n  };\n\n  const removeBlog = (id, tok, blog) => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n      blogService.remove(id, `bearer ${tok}`).then(() => {\n        setBlogs(blogs.filter(per => per.id !== id));\n        setErrorMessage(`Blog Deleted`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.clear();\n  };\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        message: errorMessage,\n        type: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Log in to application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            name: \"Username\",\n            onChange: ({\n              target\n            }) => setUsername(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            name: \"Password\",\n            onChange: ({\n              target\n            }) => setPassword(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"login-button\",\n          type: \"submit\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"BLOGS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage,\n      type: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged in \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLogout(),\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog,\n      updateBlog: updateBlog,\n      user: user,\n      removeBlog: removeBlog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"create new blog\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(BlogCreateForm, {\n        createBlog: addBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"yP9MX0MKfJu68EiJzZddKxTfCrA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/oskaripeltonen/Desktop/Fullstack Open/osa5/bloglist-frontend-main/src/App.js"],"names":["React","useState","useEffect","useRef","Blog","blogService","loginService","Notification","BlogCreateForm","Togglable","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","blogFormRef","getAll","then","sort","blg","blg2","parseInt","likes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","console","log","login","setItem","stringify","exception","setTimeout","addBlog","blogObject","current","toggleVisibility","create","returnedBlog","concat","title","author","updateBlog","id","update","removeBlog","tok","blog","confirm","remove","filter","per","handleLogout","clear","target","value","name","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport BlogCreateForm from './components/BlogCreateForm'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs.sort(function (blg, blg2) {\n        return parseInt(blg2.likes) - parseInt(blg.likes)\n      }))\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      //console.log(user)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log(\"loggin in\")\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n        .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setErrorMessage(`A new blog ${blogObject.title} by ${blogObject.author} added`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const updateBlog = (id,blogObject) => {\n    blogService\n      .update(id,blogObject)\n  }\n\n  const removeBlog = (id, tok, blog) => {\n    if(window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)){\n      blogService\n      .remove(id, `bearer ${tok}`)\n        .then(() => {\n        setBlogs(blogs.filter(per => per.id !== id))\n        setErrorMessage(`Blog Deleted`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.clear()\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <Notification message={errorMessage} type={0} />\n        <h2>Log in to application</h2>\n        <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h3>BLOGS</h3>\n      <Notification message={errorMessage} type={1} />\n      <div>\n        <p>{user.name} logged in <button onClick={() => handleLogout()}>logout</button></p>\n      </div>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} user={user} removeBlog={removeBlog}/>\n      )}\n      <Togglable buttonLabel=\"create new blog\" ref={blogFormRef}>\n        <BlogCreateForm createBlog={addBlog}/>\n      </Togglable>\n    </div>\n\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}