{"ast":null,"code":"import _slicedToArray from\"/Users/oskaripeltonen/Desktop/Docker-ex/Docker-Exercise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useImperativeHandle,forwardRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Togglable=/*#__PURE__*/forwardRef(function(props,ref){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var hideWhenVisible={display:visible?'none':''};var showWhenVisible={display:visible?'':'none'};var toggleVisibility=function toggleVisibility(){setVisible(!visible);};useImperativeHandle(ref,function(){return{toggleVisibility:toggleVisibility};});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:hideWhenVisible,children:/*#__PURE__*/_jsx(\"button\",{onClick:toggleVisibility,children:props.buttonLabel})}),/*#__PURE__*/_jsxs(\"div\",{style:showWhenVisible,children:[props.children,/*#__PURE__*/_jsx(\"button\",{onClick:toggleVisibility,children:\"cancel\"})]})]});});Togglable.displayName='Togglable';export default Togglable;","map":{"version":3,"sources":["/Users/oskaripeltonen/Desktop/Docker-ex/Docker-Exercise/src/components/Togglable.js"],"names":["useState","useImperativeHandle","forwardRef","Togglable","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","displayName"],"mappings":"8KAAA,OAASA,QAAT,CAAmBC,mBAAnB,CAAwCC,UAAxC,KAA0D,OAA1D,C,wFAGA,GAAMC,CAAAA,SAAS,cAAGD,UAAU,CAAC,SAACE,KAAD,CAAQC,GAAR,CAAgB,eACbL,QAAQ,CAAC,KAAD,CADK,wCACpCM,OADoC,eAC3BC,UAD2B,eAG3C,GAAMC,CAAAA,eAAe,CAAG,CAAEC,OAAO,CAAEH,OAAO,CAAG,MAAH,CAAY,EAA9B,CAAxB,CACA,GAAMI,CAAAA,eAAe,CAAG,CAAED,OAAO,CAAEH,OAAO,CAAG,EAAH,CAAQ,MAA1B,CAAxB,CAEA,GAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BJ,UAAU,CAAC,CAACD,OAAF,CAAV,CACD,CAFD,CAIAL,mBAAmB,CAACI,GAAD,CAAM,UAAM,CAC3B,MAAO,CACHM,gBAAgB,CAAhBA,gBADG,CAAP,CAGH,CAJkB,CAAnB,CAMA,mBACE,oCACE,YAAK,KAAK,CAAEH,eAAZ,uBACE,eAAQ,OAAO,CAAEG,gBAAjB,UAAoCP,KAAK,CAACQ,WAA1C,EADF,EADF,cAIE,aAAK,KAAK,CAAEF,eAAZ,WACGN,KAAK,CAACS,QADT,cAEE,eAAQ,OAAO,CAAEF,gBAAjB,oBAFF,GAJF,GADF,CAWD,CA3B2B,CAA5B,CAiCAR,SAAS,CAACW,WAAV,CAAwB,WAAxB,CAEA,cAAeX,CAAAA,SAAf","sourcesContent":["import { useState, useImperativeHandle, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n      return {\n          toggleVisibility\n      }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable"]},"metadata":{},"sourceType":"module"}